"use strict";(()=>{var c=["https://4everland.xyz/ipfs/{cid}{pathToResource}","https://w3s.link/ipfs/{cid}{pathToResource}","https://ipfs.io/ipfs/{cid}{pathToResource}","https://dweb.link/ipfs/{cid}{pathToResource}"];var A=/^ipfs:\/\/([^/]+)(.*)$/;function S(e){let[,t="",r=""]=A.exec(e)??[];return t?{cid:t,pathToResource:r}:null}function g(e,t){let r=(()=>t.pathToResource===""||t.pathToResource.startsWith("/")?t.pathToResource:`/${t.pathToResource}`)();return e.replace(/{cid}/g,t.cid).replace(/\/?{pathToResource}/g,r)}function d(e,t=c){let r=S(e);return r?t.map(s=>({gateway:s,url:g(s,r)})):[]}var I=class extends Error{constructor(r,s,o){super(r);this.url=s;this.web2InfoList=o}name="IpfsFetchError"};var U=new Promise(()=>{});function y(e,{gateways:t=c,signal:r,...s}={}){let o=d(e,t),i=new Set,T=0;return Promise.race(o.map(l=>{let f=new AbortController;i.add(f),r?.addEventListener("abort",()=>f.abort());let h=()=>(T+=1,T>=o.length?Promise.reject(new I("ipfsFetch all failed",e,o)):U);return fetch(l.url,{...s,signal:f.signal}).then(n=>n.ok?(i.delete(f),Object.assign(n,{_info:l})):h()).catch(n=>n instanceof Error&&n.name==="AbortError"?Promise.reject(n):h())})).finally(()=>{i.forEach(l=>l.abort()),i.clear()})}var _="CHECK_IPFS_GATEWAY_WS_STATUS",E="IPFS_GATEWAY_WS_IS_UP",w="/ipfs/";var a=self,u=[],m=w,p=null;console.log("version: 0.0.19; build at: 4/28/2023, 03:53:32 UTC");a.addEventListener("install",e=>{let t=new URL(location).searchParams;m=t.get("gatewayPrefix")??m,u=t.getAll("gateways")??[],p=u[0]??null,e.waitUntil(a.skipWaiting())});a.addEventListener("activate",e=>{e.waitUntil(a.clients.claim()),W()});a.addEventListener("fetch",e=>{let t=new URL(e.request.url);t.origin===a.location.origin&&t.pathname.startsWith(m)&&e.respondWith((async()=>{let r=o=>y(`ipfs://${t.pathname.substring(m.length)}`,{gateways:o,cache:"force-cache",redirect:e.request.redirect,signal:e.request.signal}),s=()=>r(u.length>0?u:void 0).then(o=>(p=o?._info?.gateway??null,o));return p?r([p]).catch(o=>(console.error(o),p=null,s())):s()})())});a.addEventListener("message",e=>{e.data===_&&W()});function W(){a.clients.matchAll().then(e=>{e.forEach(t=>t.postMessage(E))})}})();
